<%@include file="includes/setup.md.rsp"%>

<%@string fcnname="rowWeightedMeans"%>
<% fcnname <- "<%@string name="fcnname"%>" %>
<%@meta title="${fcnname}() benchmarks"%>
<%@meta author="Henrik Bengtsson"%>
<%@meta date="2014-06-04"%>

<%@include file="${header}"%>

# <%@meta name="title"%>
<%@meta name="author"%> on <%@meta name="date"%> 

This report benchmark the performance of <%=fcnname%>() against alternative methods.

## Alternative methods

* rowWeightedMeans_naive()

where

```r
<%=withCapture({
rowWeightedMeans_naive <- function(X, W, na.rm=FALSE, ...) {
  res <- double(nrow(X))
  for (ii in seq_along(res)) {
    res[ii] <- weighted.mean(X[ii,], w=W[ii,], na.rm=na.rm, ...)
  }
  res
} # rowWeightedMeans_naive()
})%>
```


## Data
```r
<%=withCapture({
<%@include file="R/random-matrices.R"%>
data <- rmatrices(mode="double")
#data <- data[1:3]
#ata <- lapply(data, FUN=function(X) X[seq_len(min(40,nrow(X))),])
})%>
```

## Results

<% for (ii in seq_along(data)) { %>
<%
dataLabel <- names(data)[ii]
X <- data[[dataLabel]]
gc()
%>
### <%=dataLabel%> (<%=paste(dim(X), collapse="-by-")%>) matrix

```r
<%=withCapture({
X <- data[[.dataLabel.]]
W <- array(runif(length(X)), dim=dim(X))
stats <- microbenchmark(
 rowWeightedMeans = rowWeightedMeans(X, W=W, na.rm=FALSE),
 rowWeightedMeans_naive = rowWeightedMeans_naive(X, W=W, na.rm=FALSE),
  unit = "ms"
)
})%>
```

<% benchmarkResults(stats, tags=dataLabel) %>

<% } # for (ii ...) %>

<%@include file="${footer}"%>


<%---------------------------------------------------------------------------
HISTORY:
2014-06-04
o Created.
---------------------------------------------------------------------------%>
