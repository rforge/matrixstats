<%@include file="includes/setup.md.rsp"%>

<%@string fcnname="binCounts"%>
<% fcnname <- "<%@string name="fcnname"%>" %>
<%@meta title="${fcnname}() benchmarks"%>
<%@meta author="Henrik Bengtsson"%>
<%@meta date="2014-05-25"%>

<%@include file="${header}"%>


# <%@meta name="title"%>

This report benchmark the performance of <%=fcnname%>() against alternative methods.

## Alternative methods

* hist()

as below

```r
<%=withCapture({
hist <- graphics::hist
binCounts_hist <- function(x, bx, right=FALSE, ...) {
  hist(x, breaks=bx, right=right, include.lowest=TRUE, plot=FALSE)$counts
}
})%>
```

## Results

### Non-sorted simulated data
```r
<%=withCapture({
nx <- 100e3 # Number of data points
set.seed(0xBEEF)
x <- runif(nx, min=0, max=1)

# Uniformely distributed bins
nb <- 10e3 # Number of bins
bx <- seq(from=0, to=1, length.out=nb+1L)
bx <- c(-1, bx, 2)
})%>
```

<% benchmark <- function() { %>
<% dataLabel <- if (is.unsorted(x)) "unsorted" else "sorted" %>
<% message(dataLabel) %>
```r
<%=withCapture({
stats <- microbenchmark(
 binCounts = binCounts(x, bx=bx),
 hist      = binCounts_hist(x, bx=bx),
 unit = "ms"
)
})%>
```

<% benchmarkResults(stats, tags=dataLabel) %>

<%
# Sanity checks
n0 <- binCounts_hist(x, bx=bx)
n1 <- binCounts(x, bx=bx)
stopifnot(identical(n1, n0))
n1r <- rev(binCounts(-x, bx=rev(-bx), right=TRUE))
stopifnot(identical(n1r, n1))
%>
<%----
----%>
<% } # benchmark() %>

<% benchmark() %>


### Sorted simulated data
```r
<%=withCapture({
  x <- sort(x)
})%>
```
<% benchmark() %>


<%@include file="${footer}"%>


<%---------------------------------------------------------------------------
HISTORY:
2014-06-02
o Restructured.
2014-05-25
o Created.
---------------------------------------------------------------------------%>
