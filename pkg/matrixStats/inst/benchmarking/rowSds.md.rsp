<%@include file="includes/setup.md.rsp"%>

<%@string fcnname="rowSds"%>
<% fcnname <- "<%@string name="fcnname"%>" %>
<%@meta title="${fcnname}() benchmarks"%>
<%@meta author="Henrik Bengtsson"%>
<%@meta date="2014-06-02"%>

<%@include file="${header}"%>


# <%@meta name="title"%>
<%@meta name="author"%> on <%@meta name="date"%>

This report benchmark the performance of <%=fcnname%>() against alternative methods.

## Alternative methods

* apply() + sd()
* rowSdColMeans()

where

```r
<%=withCapture({
rowSdRowMeans <- function(x, na.rm=TRUE) {
  if (na.rm) {
    n <- rowSums(!is.na(x))
  } else {
    n <- ncol(x)
  }
  mu <- rowMeans(x, na.rm=na.rm)
  var <- rowMeans(x*x, na.rm=na.rm) - mu^2
  sqrt(var * (n/(n-1)))
}
})%>
```

See also [StackOverflow:colSds?].


## Data
```r
<%=withCapture({
<%@include file="R/random-matrices.R"%>
data <- rmatrices(mode="double")
})%>
```

## Results

<% for (ii in seq_along(data)) { %>
<%
dataLabel <- names(data)[ii]
X <- data[[dataLabel]]
gc()
%>
### <%=dataLabel%> (<%=paste(dim(X), collapse="-by-")%>) matrix

```r
<%=withCapture({
X <- data[[.dataLabel.]]
stats <- microbenchmark(
 rowSds        = rowSds(X, na.rm=FALSE),
 apply         = apply(X, MARGIN=1L, FUN=sd, na.rm=FALSE),
 rowSdRowMeans = rowSdRowMeans(X, na.rm=FALSE),
 unit = "ms"
)
})%>
```

<% benchmarkResults(stats, tags=dataLabel) %>

<%
# Sanity checks
Y <- list(
 rowSds        = rowSds(X, na.rm=FALSE),
 apply         = apply(X, MARGIN=1L, FUN=sd, na.rm=FALSE),
 rowSdRowMeans = rowSdRowMeans(X, na.rm=FALSE)
)
lapply(Y, FUN=function(x) stopifnot(isTRUE(all.equal(x, Y[[1]]))))
%>

<% } # for (ii ...) %>


<%@include file="${footer}"%>


<%---------------------------------------------------------------------------
HISTORY:
2014-06-02
o Created.
---------------------------------------------------------------------------%>
