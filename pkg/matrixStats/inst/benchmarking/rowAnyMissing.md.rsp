<%@include file="includes/setup.md.rsp"%>

<%@string fcnname="rowAnyMissing"%>
<% fcnname <- "<%@string name="fcnname"%>" %>
<%@meta title="${fcnname}() benchmarks"%>
<%@meta author="Henrik Bengtsson"%>
<%@meta date="2014-06-02"%>

<%@include file="${header}"%>


# <%@meta name="title"%>
<%@meta name="author"%> on <%@meta name="date"%>

This report benchmark the performance of <%=fcnname%>() against alternative methods.

## Alternative methods

* apply() + anyMissing()
* rowAnyMissing()
* rowSums() + is.na()

<%=withCapture({
rowAnyMissing <- function(x, ...) {
  is.na(rowCounts(x, na.rm=FALSE))
}
})%>

## Data
```r
<%=withCapture({
<%@include file="R/random-matrices.R"%>
data <- lapply(data, FUN=function(x) {
  storage.mode(x) <- "integer";
  if (runif(1) < 0.1) x[sample(length(x), size=0.1*length(x))] <- NA
  x
})
})%>
```

## Results

<% for (ii in seq_along(data)) { %>
<%
dataLabel <- names(data)[ii]
X <- data[[dataLabel]]
gc()
%>
### <%=dataLabel%> (<%=paste(dim(X), collapse="-by-")%>) matrix

```r
<%=withCapture({
X <- data[[.dataLabel.]]
stats <- microbenchmark(
 rowAnyMissing = rowAnyMissing(X),
 apply     = apply(X, MARGIN=1L, FUN=anyMissing),
 rowSums   = is.na(rowSums(X, na.rm=FALSE)),
 unit = "ms"
)
})%>
```

<% benchmarkResults(stats, tags=dataLabel) %>

<%
# Sanity checks
Y <- list(
 rowAnyMissing = rowAnyMissing(X),
 apply     = apply(X, MARGIN=1L, FUN=anyMissing),
 rowSums   = is.na(rowSums(X, na.rm=FALSE))
)
lapply(Y, FUN=function(x) stopifnot(isTRUE(all.equal(x, Y[[1]]))))
%>

<% } # for (ii ...) %>


<%@include file="${footer}"%>


<%---------------------------------------------------------------------------
HISTORY:
2014-06-02
o Created.
---------------------------------------------------------------------------%>
